/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ConnectionManager;
import DAO.QuestionDAO;
import DAO.QuizDAO;
import DAO.QuizDetailDAO;
import DAO.alert_messager;
import DTO.QuizDetail;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TMK_PLAN4
 */
public class CreateTestQuiz extends javax.swing.JInternalFrame {

    /**
     * Creates new form CreateTestQuiz
     */
    DefaultTableModel model = null;
    DefaultTableModel model1 = null;
    private int selectRow = -1;

    public CreateTestQuiz() {
        initComponents();

        model = new DefaultTableModel(null, new Object[]{"Question ID", "Question Content","Subject","Level"});
        tbcauhoi.setModel(model);
        model1 = new DefaultTableModel(null, new Object[]{"Quiz ID", "Question ID"});
        tblbode.setModel(model1);
        loadDataToTable(); // dua du lieu len bang cauhoi
        loadDataToComboxQuizID();// dua du lieu len combox
        loadDataToQuizDetail(); // dua du lieu len bang CTDethi
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnCreateTestQuizTop = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboQuizID = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtquestionID = new javax.swing.JTextField();
        pnCreateTestQuizLeft = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbcauhoi = new javax.swing.JTable();
        pnCreateTestQuizRight = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblbode = new javax.swing.JTable();
        pnCreateTestQuizCenter = new javax.swing.JPanel();
        btnmoveRight = new javax.swing.JButton();
        btnmoveout = new javax.swing.JButton();

        setIconifiable(true);
        setTitle("Craete  Quiz");
        setMinimumSize(new java.awt.Dimension(1350, 685));
        setPreferredSize(new java.awt.Dimension(1350, 685));

        pnCreateTestQuizTop.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quiz Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 153, 0))); // NOI18N
        pnCreateTestQuizTop.setMinimumSize(new java.awt.Dimension(1150, 100));
        pnCreateTestQuizTop.setPreferredSize(new java.awt.Dimension(1150, 100));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Quiz ID");

        cboQuizID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("QuestionID");

        txtquestionID.setEditable(false);

        javax.swing.GroupLayout pnCreateTestQuizTopLayout = new javax.swing.GroupLayout(pnCreateTestQuizTop);
        pnCreateTestQuizTop.setLayout(pnCreateTestQuizTopLayout);
        pnCreateTestQuizTopLayout.setHorizontalGroup(
            pnCreateTestQuizTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCreateTestQuizTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboQuizID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtquestionID, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(816, Short.MAX_VALUE))
        );
        pnCreateTestQuizTopLayout.setVerticalGroup(
            pnCreateTestQuizTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCreateTestQuizTopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCreateTestQuizTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnCreateTestQuizTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboQuizID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtquestionID))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        getContentPane().add(pnCreateTestQuizTop, java.awt.BorderLayout.PAGE_START);

        pnCreateTestQuizLeft.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Question List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 153, 0))); // NOI18N
        pnCreateTestQuizLeft.setMaximumSize(new java.awt.Dimension(750, 451));
        pnCreateTestQuizLeft.setMinimumSize(new java.awt.Dimension(750, 451));
        pnCreateTestQuizLeft.setPreferredSize(new java.awt.Dimension(750, 451));

        tbcauhoi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Question ID", "Question Content", "Subject", "Level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbcauhoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbcauhoiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbcauhoi);
        if (tbcauhoi.getColumnModel().getColumnCount() > 0) {
            tbcauhoi.getColumnModel().getColumn(0).setMinWidth(70);
            tbcauhoi.getColumnModel().getColumn(0).setMaxWidth(70);
        }

        javax.swing.GroupLayout pnCreateTestQuizLeftLayout = new javax.swing.GroupLayout(pnCreateTestQuizLeft);
        pnCreateTestQuizLeft.setLayout(pnCreateTestQuizLeftLayout);
        pnCreateTestQuizLeftLayout.setHorizontalGroup(
            pnCreateTestQuizLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
        );
        pnCreateTestQuizLeftLayout.setVerticalGroup(
            pnCreateTestQuizLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCreateTestQuizLeftLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pnCreateTestQuizLeft, java.awt.BorderLayout.LINE_START);

        pnCreateTestQuizRight.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quiz List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 153, 0))); // NOI18N
        pnCreateTestQuizRight.setMaximumSize(new java.awt.Dimension(300, 451));
        pnCreateTestQuizRight.setMinimumSize(new java.awt.Dimension(300, 451));
        pnCreateTestQuizRight.setPreferredSize(new java.awt.Dimension(300, 451));

        tblbode.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Quiz ID", "Question ID"
            }
        ));
        tblbode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblbodeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblbode);

        javax.swing.GroupLayout pnCreateTestQuizRightLayout = new javax.swing.GroupLayout(pnCreateTestQuizRight);
        pnCreateTestQuizRight.setLayout(pnCreateTestQuizRightLayout);
        pnCreateTestQuizRightLayout.setHorizontalGroup(
            pnCreateTestQuizRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCreateTestQuizRightLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCreateTestQuizRightLayout.setVerticalGroup(
            pnCreateTestQuizRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCreateTestQuizRightLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pnCreateTestQuizRight, java.awt.BorderLayout.LINE_END);

        pnCreateTestQuizCenter.setMinimumSize(new java.awt.Dimension(100, 451));
        pnCreateTestQuizCenter.setPreferredSize(new java.awt.Dimension(100, 451));

        btnmoveRight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/chevron (1).png"))); // NOI18N
        btnmoveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmoveRightActionPerformed(evt);
            }
        });

        btnmoveout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/chevron.png"))); // NOI18N

        javax.swing.GroupLayout pnCreateTestQuizCenterLayout = new javax.swing.GroupLayout(pnCreateTestQuizCenter);
        pnCreateTestQuizCenter.setLayout(pnCreateTestQuizCenterLayout);
        pnCreateTestQuizCenterLayout.setHorizontalGroup(
            pnCreateTestQuizCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCreateTestQuizCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCreateTestQuizCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnmoveout, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(btnmoveRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnCreateTestQuizCenterLayout.setVerticalGroup(
            pnCreateTestQuizCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCreateTestQuizCenterLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnmoveRight, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnmoveout, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(340, Short.MAX_VALUE))
        );

        getContentPane().add(pnCreateTestQuizCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbcauhoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbcauhoiMouseClicked
        int row = tbcauhoi.getSelectedRow();
        int quesID = (Integer) model.getValueAt(row, 0);
        txtquestionID.setText(String.valueOf(quesID));
        selectRow = this.tbcauhoi.getSelectedRow();
    }//GEN-LAST:event_tbcauhoiMouseClicked

    private void btnmoveRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmoveRightActionPerformed
        try {
            String quizid = cboQuizID.getSelectedItem().toString();
            if (selectRow == -1) {
                JOptionPane.showMessageDialog(this, "Please selecte a row to move QuizList");
            } else if (quizid.equals("--select--")) {
                alert_messager alt = new alert_messager();
                alt.alter("please select QuizID");

            } else {
                int quizID = Integer.valueOf(quizid);
                int questionID = Integer.valueOf(txtquestionID.getText());
                if (CheckQuestionIDExists(questionID,quizID)== true) {
                    alert_messager alt = new alert_messager();
                    alt.alter("Question already exits");
                } else {

                    QuizDetail dto = new QuizDetail();
                    dto.setQuizID(quizID);
                    dto.setQuestionID(questionID);
                    QuizDetailDAO dao = new QuizDetailDAO();
                    dao.insertQuizDetail(dto);
                    alert_messager alt = new alert_messager();
                    alt.alter("Insert successed!");
                    loadDataToQuizDetail();

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnmoveRightActionPerformed

    private void tblbodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbodeMouseClicked
        int row = tblbode.getSelectedRow();
        int quesID = (Integer) model1.getValueAt(row, 0);
        txtquestionID.setText(String.valueOf(quesID));
        selectRow = this.tblbode.getSelectedRow();
    }//GEN-LAST:event_tblbodeMouseClicked
    public void loadDataToComboxQuizID() {

        QuizDAO dao = new QuizDAO();
        ResultSet rs = dao.loadAllQuiz();
        try {
            while (rs.next()) {
                cboQuizID.addItem(rs.getString("madethi"));
            }
            rs.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadDataToTable() {
        model = new DefaultTableModel(null, new Object[]{"Question ID", "Question Content","Subject","level"});
        QuestionDAO dao = new QuestionDAO();
        ResultSet rs = dao.loadData();
        try {

            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt("macauhoi"), rs.getString("ndcauhoi"),rs.getString("mamonhoc"),rs.getInt("dokho")});
            }
            tbcauhoi.setModel(model);
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void loadDataToQuizDetail() {
        model1 = new DefaultTableModel(null, new Object[]{"Quiz ID", "Question ID"});
        QuizDetailDAO dao = new QuizDetailDAO();
        ResultSet rs = dao.loadAllQuizDetail();
        try {

            while (rs.next()) {
                model1.addRow(new Object[]{rs.getInt("madethi"), rs.getString("macauhoi")});
            }
            tblbode.setModel(model1);
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // method check questionID already exit
    public static boolean CheckQuestionIDExists(int questionID, int quizID) {
        boolean QuestionIDExists = false;
        try {

            CallableStatement conn = ConnectionManager.getConnection().prepareCall("select*from CTDeThi where macauhoi=? and madethi=?");
            conn.setInt(1, questionID);
            conn.setInt(2, quizID);
            ResultSet r1 = conn.executeQuery();
            if (r1.next()) {
                QuestionIDExists = true;
            }
            conn.close();
        } catch (SQLException e) {
            System.out.println("SQL Exception: " + e.toString());
        }
        return QuestionIDExists;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnmoveRight;
    private javax.swing.JButton btnmoveout;
    private javax.swing.JComboBox<String> cboQuizID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnCreateTestQuizCenter;
    private javax.swing.JPanel pnCreateTestQuizLeft;
    private javax.swing.JPanel pnCreateTestQuizRight;
    private javax.swing.JPanel pnCreateTestQuizTop;
    private javax.swing.JTable tbcauhoi;
    private javax.swing.JTable tblbode;
    private javax.swing.JTextField txtquestionID;
    // End of variables declaration//GEN-END:variables
}
